name: ZenPacks.zenoss.vSphere2

zProperties:
  DEFAULTS:
    category: VMware vSphere    
  zVSphereEndpointHost:
    type: string
  zVSphereEndpointPort:
    type: int
    default: 443
  zVSphereEndpointUser:
    type: string
    default: admin
  zVSphereEndpointPassword:
    type: password
  zVSphereEndpointUseSsl:
    type: boolean
    default: True
  zVSpherePerfDelayCollectionMinutes:
    type: int
  zVSpherePerfQueryChunkSize:
    type: int
    default: 250    
  zVSpherePerfQueryVcChunkSize:
    type: int
    default: 64    
  zVSpherePerfQueryRaw20:
    type: boolean    
    default: True
  zVSpherePerfQueryVcRaw20:
    type: boolean    
    default: False
  zVSpherePerfMaxAgeMinutes:
    type: int
    default: 28
  zVSpherePerfRecoveryMinutes:
    type: int
    default: 240
  zVSpherePerfParallelQueries:
    type: int    
    default: 6
  zVSpherePerfQueryTimeout:
    type: int    
    default: 200
  zVSphereModelIgnore:
    type: lines
  zVSphereModelCache:
    type: lines
  zVSphereHostSystemUser:
    type: string
    default: admin
  zVSphereHostSystemPassword:
    type: password
  zVSphereHostCollectionClusterWhitelist:
    type: lines

class_relationships:
  - Endpoint 1:MC Datacenter
  - Endpoint 1:MC Folder
  - Endpoint 1:1 (r_endpoint)RootFolder
  - Endpoint(vms) 1:MC VirtualMachine
  - ComputeResource(resourcePools) 1:M (owner)ResourcePool
  - Cluster(hosts) 1:M HostSystem
  - Datacenter 1:MC ComputeResource
  - Datacenter 1:MC ResourcePool
  - Datacenter(hosts) 1:MC HostSystem
  - Datacenter(vms) 1:M VirtualMachine
  - Datacenter 1:MC Network
  - Datacenter(dvSwitches) 1:MC DistributedVirtualSwitch
  - Datacenter 1:MC Datastore
  - Datacenter 1:1 HostFolder
  - Datacenter(vmFolder) 1:1 VMFolder
  - Datacenter 1:1 HostFolder
  - Datacenter 1:1 NetworkFolder
  - Datacenter 1:1 DatastoreFolder
  - Datastore(attachedVms) M:M VirtualMachine
  - Datastore(attachedHostSystems) M:M HostSystem
  - Datastore(luns) M:M LUN
  - DistributedVirtualSwitch(portgroups) 1:M (dvSwitch)DistributedVirtualPortgroup
  - DistributedVirtualSwitch(hosts) M:M HostSystem(dvSwitches)
  - Folder(childEntities) 1:M (containingFolder)VMwareEntity
  - Folder(childFolders) 1:M (parentFolder)Folder
  - HostSystem(vms) 1:M (host)VirtualMachine
  - HostSystem 1:1 (host)Standalone
  - HostSystem 1:MC (host)Pnic
  - HostSystem(luns) 1:MC (host)LUN
  - LUN(rdms) 1:M (lun)RDM
  - Network(attachedVms) M:M VirtualMachine
  - Network(attachedVnics) 1:M Vnic
  - VirtualMachine(rdms) 1:MC (vm)RDM
  - VirtualMachine(vnics) 1:MC (vm)Vnic
  - ResourcePool(childResourcePools) 1:M (parentResourcePool)ResourcePool
  - ResourcePool(vms) 1:M VirtualMachine
  

classes:
  # Note that the class order is in some cases significant, because 
  # one class's .py file may do an import from another, and so they need
  # to already have been processed for that to work under current versions
  # of zenpacklib, which process this file in one pass.

  Endpoint:
    base: [zenpacklib.Device]
    meta_type: vSphereEndpoint
    label: vSphere Endpoint

  VMwareEntity:
    base: [zenpacklib.Component]
    meta_type: vSphereEntity
    relationships:
      containingFolder:        
        grid_display: false

  VMwareComponent:
    base: [VMwareEntity]
    meta_type: vSphereComponent

  ComputeResource:
    base: [VMwareComponent]  
    meta_type: vSphereComputeResource
    filter_display: false
    properties: 
      numEffectiveHosts:
        type: int
        default: 0
        label: Effective Host Count
        grid_display: false
        order: 1.32        
      numHosts:
        type: int
        default: 0
        label: Host Count
        grid_display: false
        order: 1.35
      numCpuCores:
        type: int
        default: 0
        label: CPU Core Count
        grid_display: false
        order: 1.42
      numCpuThreads:
        type: int
        default: 0
        label: CPU Thread Count
        grid_display: false
        order: 1.45
      effectiveCpu:
        type: int
        default: 0
        label: Effective CPU
        grid_display: false
        order: 1.52        
      totalCpu:
        type: int
        default: 0
        label: Total CPU
        grid_display: false
        order: 1.55        
      effectiveMemory:
        type: int
        default: 0
        label: Effective Memory
        order: 1.62
        grid_display: false
        renderer: Zenoss.render.bytesString
      totalMemory:
        type: int
        default: 0
        label: Total Memory
        order: 1.65
        renderer: Zenoss.render.bytesString
        grid_display: false
      overallStatus:
        type: string
        label: Overall Status
        api_only: true
        api_backendtype: method
        grid_display: false    

      resourcePools_combined:
        label: Resource Pools
        api_only: true
        api_backendtype: method        
        renderer: Zenoss.render.vsphere_resourcePools_combined
        order: 1.2
        details_display: false
        label_width: 80

      hosts_combined:
        label: Hosts
        api_only: true
        api_backendtype: method        
        renderer: Zenoss.render.vsphere_hosts_combined
        order: 1.3
        details_display: false
        label_width: 50

      cores_combined:
        label: Cores
        api_only: true
        api_backendtype: method        
        renderer: Zenoss.render.vsphere_cores_combined
        order: 1.4
        details_display: false
        label_width: 50

      cpu_combined:
        label: CPU
        api_only: true
        api_backendtype: method        
        renderer: Zenoss.render.vsphere_cpu_combined
        order: 1.5
        details_display: false
        label_width: 145

      memory_combined:
        label: Memory
        api_only: true
        api_backendtype: method        
        renderer: Zenoss.render.vsphere_memory_combined
        order: 1.6
        details_display: false
        label_width: 130

    relationships:
      datacenter:
        order: 1.1
        label_width: 140
      resourcePools:
        grid_display: false
        
  Cluster:
    base: [ComputeResource]
    meta_type: vSphereCluster
    label: Cluster
    relationships:
      hosts:
        grid_display: false

  DistributedVirtualPortgroup:
    base: [Network]
    meta_type: vSphereDistributedVirtualPortgroup
    label: dvPortgroup
    properties:
      keyUuid:
        type: string
        default: ""
        label: Key UUID
        grid_display: false
      nsx_vSwitch:
        label: NSX Virtual Switch 
        api_only: true
        api_backendtype: method               
        type: entity
        renderer: Zenoss.render.zenpacklib_ZenPacks_zenoss_vSphere_entityTypeLinkFromGrid
        label_width: 140
        grid_display: false
    relationships:
      dvSwitch:
        order: 1.2
        label_width: 140        

  DistributedVirtualSwitch:
    base: [VMwareComponent]
    meta_type: vSphereDistributedVirtualSwitch
    label: dvSwitch
    plural_label: dvSwitches
    properties:
      dvsUUID:
        type: string
        label: UUID
        grid_display: false
      switchType:
        type: string
        label: Type
        label_width: 150

    relationships:
      portgroups:
        grid_display: false      
      hosts:
        label_width: 55

  Folder:
    base: [VMwareEntity]
    meta_type: vSphereFolder
    label: Folder

  DatastoreFolder:
    base: [Folder]
    meta_type: vSphereDatastoreFolder
    label: Datastore Folder

  HostFolder:
    base: [Folder]
    meta_type: vSphereHostFolder
    label: Host Folder

  NetworkFolder:
    base: [Folder]
    meta_type: vSphereNetworkFolder
    label: Network Folder

  RootFolder:
    base: [Folder]
    meta_type: vSphereRootFolder
    label: Root Folder

  VMFolder:
    base: [Folder]
    meta_type: vSphereVMFolder
    label: VM Folder

  Pnic:
    base: [VMwareComponent]
    meta_type: vSpherePnic
    label: pNIC
    properties:
      macaddress:
        type: string
        label: MAC Address
        label_width: 115
        order: 1.2
      linkStatus:
        type: string
        label: Link Status
        label_width: 50
        renderer: Zenoss.render.vsphere_ManagedEntityStatus
      linkSpeed:
        # Mbit
        type: string
        label: Link Speed
        grid_display: false
        details_display: true
      linkDuplex:        
        type: string
        label: Link Duplex
        grid_display: false
        details_display: true
      linkSpeed_combined:
        label: Link Speed
        api_only: true
        api_backendtype: method        
        renderer: Zenoss.render.vsphere_linkSpeed_combined
        order: 1.3
        label_width: 70
        details_display: false
    relationships:
      host:
        order: 1.1

  LUN:
    base: [VMwareComponent]
    meta_type: vSphereLUN
    label: LUN
    properties:
      diskName:
        type: string
        label: LUN Name
        grid_display: false
      lunId:
        type: string
        label: LUN ID
        order: 1.2
      diskKey:
        type: string
        label: LUN Key
        grid_display: false
      operStatus:
        type: string
        label: Operational Status
        grid_display: false
      deviceName:
        type: string
        label: DeviceName
        grid_display: false
      lunType:
        type: string
        label: Type
        grid_display: false
      vendor:
        type: string
        label: Vendor
        grid_display: false
      model:
        type: string
        label: Model
        grid_display: false
      lunUUID:
        type: string
        label: LUN UUID
        grid_display: false
      storageProvider:
        label: Storage Provider
        api_only: true
        api_backendtype: method               
        type: entity
        renderer: Zenoss.render.zenpacklib_ZenPacks_zenoss_vSphere_entityTypeLinkFromGrid
        label_width: 140
        order: 1.3
    relationships:
      host:
        label_width: 140
        order: 1.1
      datastores:
        grid_display: false
      rdms:
        grid_display: false

  HostSystem:
    base: [VMwareComponent]
    meta_type: vSphereHostSystem
    label: Host
    properties:
      hostname:
        type: string
        label: Hostname
        grid_display: false
      manageIps:
        type: lines
        default: []
        label: Management IP Addresses
        grid_display: false
      totalMemory:
        type: int
        label: Total Memory
        order: 1.3
        label_width: 75
        renderer: Zenoss.render.bytesString        
      connectionState:
        type: string
        label: Connection State
        grid_display: false
      powerState:
        type: string
        label: Power State
        grid_display: false
      inMaintenanceMode:
        type: boolean
        label: In Maintenance Mode
        grid_display: false
      hypervisorVersion:
        type: string
        label: Hypervisor Version
        short_label: Version
        order: 1.2
        label_width: 200
        grid_display: false
      hardwareVendor:
        type: string
        label: Vendor
        grid_display: false
      hardwareModel:
        type: string
        label: Model
        grid_display: false
      hardwareUUID:
        type: string
        label: UUID
        grid_display: false
      cpuModel:
        type: string
        label: CPU Model
        grid_display: false
      cpuMhz:
        type: int
        label: CPU MHz
        grid_display: false
        renderer: Zenoss.render.vsphere_cpuSpeed        
      numCpuPkgs:
        type: int
        label: CPU Package Count
        grid_display: false
      numCpuCores:
        type: int
        label: CPU Core Count
        grid_display: false
      cluster_or_standalone:
        label: Cluster
        api_only: true
        api_backendtype: method               
        type: entity
        renderer: Zenoss.render.zenpacklib_ZenPacks_zenoss_vSphere_entityTypeLinkFromGrid
        label_width: 140
      powered_vm_count:
        label: Powered On VM Count
        api_only: true
        api_backendtype: method    
        grid_display: false
      suspended_vm_count:
        label: Suspended VM Count
        api_only: true
        api_backendtype: method    
        grid_display: false
      unpowered_vm_count:
        label: Powered Off VM Count
        api_only: true
        api_backendtype: method    
        grid_display: false
      vms_combined:
        label: VMs
        api_only: true
        api_backendtype: method        
        renderer: Zenoss.render.vsphere_vms_combined
        order: 1.4
        label_width: 110
        details_display: false
      overallStatus:
        type: string
        label: Overall Status
        api_only: true
        api_backendtype: method
        grid_display: false
      vxlanInstallDate:
        type: string
        label: VXLAN VIB Install Date
        grid_display: false
      vxlanVersion:
        type: string
        label: VXLAN VIB Version
        grid_display: false
      vsipInstallDate:
        type: string
        label: VSIP VIB Install Date
        grid_display: false
      vsipVersion:
        type: string
        label: VSIP VIB Version
        grid_display: false
      dvfilterSwitchSecurityInstallDate:
        type: string
        label: DVFilter Switch Security VIB Install Date
        grid_display: false
      dvfilterSwitchSecurityVersion:
        type: string
        label: DVFilter Switch Security VIB Version
        grid_display: false
      vdsConfigured:
        type: boolean
        label: VDS Config Present
        grid_display: false
    relationships:
      datacenter:
        label_width: 140
        order: 1.1
      datastores:
        grid_display: false
      cluster:
        grid_display: false      
      standalone:
        grid_display: false
      pnics:
        grid_display: false
      vms:
        grid_display: false
      luns:
        grid_display: false
      dvSwitches:
        grid_display: false

  Datastore:
    base: [VMwareComponent]
    meta_type: vSphereDatastore
    label: Datastore
    properties:
      type:
        type: string
        label: Datastore Type
        short_label: Type
        order: 1.2
      storageProvider:
        label: Provider
        api_only: true
        api_backendtype: method        
        type: entity
        renderer: Zenoss.render.zenpacklib_ZenPacks_zenoss_vSphere_entityTypeLinkFromGrid
        order: 1.3
      capacity:
        type: int
        label: Capacity
        order: 1.4
        renderer: Zenoss.render.bytesString        
        default: 0        
      used_pct:
        label: Used Percent
        short_label: Used
        api_only: true
        api_backendtype: method        
        renderer: Zenoss.render.vsphere_percent
        order: 1.5
        label_width: 55
      allocated_pct:
        label: Allocated
        api_only: true
        api_backendtype: method        
        renderer: Zenoss.render.vsphere_percent
        order: 1.6
        label_width: 75
      freeSpace:
        type: int
        label: Free Space
        grid_display: false
        renderer: Zenoss.render.bytesString
        default: 0                
      uncommitted:
        type: int
        label: Uncommitted Space
        grid_display: false
        renderer: Zenoss.render.bytesString
        default: 0
      uncommitted_pct:
        type: int
        label: Uncommitted Percent
        short_label: Uncommitted
        grid_display: false
        renderer: Zenoss.render.vsphere_percent
      url:
        type: string
        label: URL
        grid_display: false
      nasRemoteHost:
        type: string
        label: NAS Remote Host
        grid_display: false
      nasRemotePath:
        type: string
        label: NAS Remote Path
        grid_display: false
      nasUserName:
        type: string
        label: NAS Username
        grid_display: false
      localPath:
        type: string
        label: Local Filesystem Path
        grid_display: false
      utilizationPercent:
        api_only: true
        api_backendtype: method  
        grid_display: false
        details_display: false        
      utilizationDisplay:
        api_only: true
        api_backendtype: method  
        grid_display: false
        details_display: false        

    relationships:
      datacenter:
        order: 1.1
        label_width: 140
      luns:
        grid_display: false
      attachedVms:
        grid_display: false
      attachedHostSystems:
        grid_display: false

  Network:
    base: [VMwareComponent]
    meta_type: vSphereNetwork
    label: Network
    properties:
      accessible:
        type: boolean
        label: Accessible
        order: 1.5
        label_width: 70
      ipPoolName:
        type: string
        label: IP Pool Name
        short_label: IP Pool
        order: 1.3
        label_width: 140
    relationships:
      datacenter:
        order: 1.1
        label_width: 140
      attachedVms:
        order: 1.4
        label_width: 55
      attachedVnics:
        grid_display: false

  RDM:
    base: [VMwareComponent]
    meta_type: vSphereRDM
    label: RDM
    properties:
      lunUuid:
        type: string
        label: LUN UUID
        grid_display: false
      host:
        label: Host
        api_only: true
        api_backendtype: method               
        type: entity
        label_width: 140
        order: 1.3        
      storageProvider:
        label: Storage Provider
        api_only: true
        api_backendtype: method               
        type: entity
        renderer: Zenoss.render.zenpacklib_ZenPacks_zenoss_vSphere_entityTypeLinkFromGrid
        label_width: 140
        order: 1.3
    relationships:
      vm:
        order: 1.1
        label_width: 140
      lun:
        order: 1.2
        label_width: 140

  ResourcePool:
    base: [VMwareComponent]
    meta_type: vSphereResourcePool
    label: Resource Pool
    extra_paths:
      # pools are reachable from all of their parents
      - ['(parentResourcePool)+']
    properties: 
      cpuLimit:
        type: int
        label: CPU Limit
        renderer: Zenoss.render.vsphere_cpuLimit
        label_width: 75
        order: 1.3
      cpuReservation:
        type: int
        label: CPU Reservation
        renderer: Zenoss.render.vsphere_cpuReservation
        label_width: 80
        order: 1.4
      memoryLimit:
        type: int
        label: Memory Limit
        renderer: Zenoss.render.vsphere_memoryLimit
        label_width: 75
        order: 1.5
      memoryReservation:
        type: int
        label: Memory Reservation
        renderer: Zenoss.render.vsphere_memoryReservation
        label_width: 90
        order: 1.6        
      vm_count:
        type: int
        label: VMs
        api_only: true
        api_backendtype: method        
        label_width: 35        
        order: 1.7
      overallStatus:
        type: string
        label: Overall Status
        api_only: true
        api_backendtype: method
        grid_display: false
    relationships:
      datacenter:
        order: 1.1
        label_width: 125
      owner:
        label: Owner
        order: 1.2
        label_width: 125
      vms:
        grid_display: false
        details_display: false
      parentResourcePool:
        grid_display: false
        label: "Parent Resource Pool"
      childResourcePools:
        grid_display: false
        label: "Child Resource Pools"

  Standalone:
    base: [ComputeResource]
    meta_type: vSphereStandalone
    label: Standalone Resource
    relationships:
      host:
        grid_display: false


  VirtualApp:
    base: [ResourcePool]
    meta_type: vSphereVirtualApp
    label: vApp
    relationships:
      owner:
        grid_display: false
      # Not currently working (ZEN-24302)
      parentResourcePool:
        grid_display: false
        label: "Parent vApp"
      childResourcePools:
        grid_display: false
        label: "Child vApps"      
    

  Datacenter:
    base: [VMwareComponent]
    meta_type: vSphereDatacenter
    label: Datacenter

    properties:
      resourcePools_combined:
        label: Resource Pools
        api_only: true
        api_backendtype: method        
        renderer: Zenoss.render.vsphere_resourcePools_combined
        order: 1.2
        label_width: 80    
        details_display: false
      computeResources_combined:
        label: Resources
        api_only: true
        api_backendtype: method        
        renderer: Zenoss.render.vsphere_computeResources_combined
        order: 1.3
        label_width: 80
        details_display: false
      networks_combined:
        label: Networks
        api_only: true
        api_backendtype: method        
        renderer: Zenoss.render.vsphere_networks_combined
        order: 1.6
        label_width: 75
        details_display: false
      vapp_count:
        label: vApp Count
        api_only: true
        api_backendtype: method    
        grid_display: false    
      cluster_count:
        label: Cluster Count
        api_only: true
        api_backendtype: method        
        grid_display: false    
      standalone_count:
        label: Standalone Resource Count
        api_only: true
        api_backendtype: method        
        grid_display: false    
      network_count:
        label: Network Count
        api_only: true
        api_backendtype: method        
        grid_display: false    
      dvportgroup_count:
        label: dvPortgroup Count
        api_only: true
        api_backendtype: method        
        grid_display: false    

    relationships:
      hosts:
        order: 1.4
        label_width: 55
      vms:
        order: 1.5
        label_width: 65
      dvSwitches:
        order: 1.7
        label_width: 80
      computeResources:
        grid_display: false
        details_display: false        
      resourcePools:
        grid_display: false
      networks:
        grid_display: false
      datastores:
        grid_display: false
      hostFolder:
        grid_display: false
        details_display: false
      vmFolder:
        grid_display: false
        details_display: false
      networkFolder:
        grid_display: false
        details_display: false
      datastoreFolder:
        grid_display: false
        details_display: false

  Vnic:
    base: [VMwareComponent]
    meta_type: vSphereVnic
    label: vNIC
    properties:
      macaddress:
        type: string
        label: MAC Address
        label_width: 115
        order: 1.3
      deviceKey:
        type: string
        grid_display: false
        details_display: false
    relationships:
      vm:
        label_width: 220
        order: 1.1
      network:
        label_width: 140
        order: 1.2

  VirtualMachine:
    base: [VMwareComponent]
    meta_type: vSphereVirtualMachine
    label: Virtual Machine
    short_label: VM
    plural_label: VMs
    extra_paths:
      - ['resourcePool', 'owner']  # from cluster or standalone
      - ['resourcePool', '(parentResourcePool)+']   # from all parent resource pools, recursively.
    properties:
      overallStatus:
        type: string
        label: Overall Status
        api_only: true
        api_backendtype: method
        grid_display: false
      connectionState:
        type: string
        default: ''
        label: Connection State
        grid_display: false
      guestname:
        type: string
        default: ''
        label: Guest Name
        grid_display: false
      vmUUID:
        type: string
        label: UUID
        grid_display: false
      isTemplate:
        type: boolean
        label: Is Template
        grid_display: false
      macAddresses:
        type: lines
        details_display: false
        grid_display: false
      macAddressesStr:
        type: lines
        label: MAC Addresses
        api_only: true
        api_backendtype: method
        grid_display: false
      numCPU:
        type: int
        label: CPU Count
        short_label: CPUs
        label_width: 30
        order: 1.4
      guestDevices:
        type: entity
        label: Guest Device
        api_only: true
        api_backendtype: method
        order: 1.5
      memory:
        type: int
        label: Memory
        renderer: Zenoss.render.bytesString
        order: 1.6
      osType:
        type: string
        default: ''
        label: Operating System Type
        grid_display: false
      powerState:
        type: string
        default: ''
        label: Power State
        short_label: Power
        renderer: Zenoss.render.vsphere_PowerState
        label_width: 40
        order: 1.7
      toolsVersion:
        type: int
        default: 0
        grid_display: false
        details_display: false
      toolsVersionStr:
        type: string
        api_only: true
        api_backendtype: method
        label: VMWare Tools Version
        grid_display: false
      toolsStatus:
        type: string
        default: ''
        label: VMware Tools Status
        grid_display: false
      hardwareVersion:
        type: string
        default: ''
        label: Hardware Version
        grid_display: false
      storageCommitted:
        type: int
        label: Committed Storage
        renderer: Zenoss.render.bytesString        
        grid_display: false
      storageUncommitted:
        type: int
        label: Uncommitted Storage
        renderer: Zenoss.render.bytesString        
        grid_display: false
      nsx_edge:
        type: entity
        api_only: true
        api_backendtype: method
        label: NSX Edge
        grid_display: false
      nsx_controller:
        type: entity
        api_only: true
        api_backendtype: method
        label: NSX Controller
        grid_display: false
    relationships:
      datacenter:
        order: 1.1
        label_width: 140
      resourcePool:
        order: 1.2
      host:
        order: 1.3
      datastores:
        grid_display: false
      rdms:
        grid_display: false
      vnics:
        grid_display: false
      networks:
        grid_display: false        



device_classes:
  /vSphere:
    remove: true

    templates:
      Cluster:
        description: "VMware vSphere: Cluster Monitoring"
        targetPythonClass: ZenPacks.zenoss.vSphere.Cluster

        thresholds:
          High CPU Usage:
            dsnames: [cpuUsage_cpuUsage]
            eventClass: /Perf/CPU
            maxval: '90'
            enabled: False
          High Consumed Memory:
            dsnames: [memConsumed_memConsumed]
            eventClass: /Perf/Memory
            maxval: here.effectiveMemory * .9
            enabled: False
          High Load:
            dsnames: [cpuUsagemhz_cpuUsagemhz]
            eventClass: /Perf/CPU
            maxval: here.effectiveCpu * .9
            enabled: False

        datasources:
          cpuUsagemhz:
            #description: "VMware vSphere: Cluster Services / CPU Usage (MHz) (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: cpu
            counter_key: usagemhz
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryVcChunkSize}"
            raw20: "${here/zVSpherePerfQueryVcRaw20}"

            datapoints:
              cpuUsagemhz:
                rrdmin: 0
                aliases: {cpuUsagemhz: ''}              

          cpuUsage:
            #description: "VMware vSphere: Cluster Services / CPU Usage (%) (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: cpu
            counter_key: usage
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryVcChunkSize}"
            raw20: "${here/zVSpherePerfQueryVcRaw20}"

            datapoints:
              cpuUsage:
                rrdmin: 0
                aliases: {cpuUsage: ''}

          memConsumed:
            #description: "VMware vSphere: Cluster Services / Memory Consumed (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: mem
            counter_key: consumed
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryVcChunkSize}"
            raw20: "${here/zVSpherePerfQueryVcRaw20}"

            datapoints:
              memConsumed:
                rrdmin: 0
                aliases: {memConsumed: ''}              

          memBalloon:
            #description: "VMware vSphere: Cluster Services / Memory Balloon (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: mem
            counter_key: vmmemctl
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryVcChunkSize}"
            raw20: "${here/zVSpherePerfQueryVcRaw20}"

            datapoints:
              memBalloon:
                rrdmin: 0
                aliases: {memBalloon: ''}

          memTotal:
            #description: "VMware vSphere: Cluster Services / Total Memory"
            type: Property
            component: "${here/id}"
            eventClass: /vSphere
            class_name: vSphereCluster
            property_name: totalMemory

            datapoints:
              memTotal:
                rrdmin: 0

                aliases:
                  memTotal__bytes: ""

        graphs:
          CPU Utilization:
            units: percentage
            miny: 0
            maxy: 100

            graphpoints:
              Usage:
                dpName: cpuUsage_cpuUsage
                format: "%7.2lf%%"
                rpn: "100,/"

          CPU Usage:
            units: hertz
            miny: 0

            graphpoints:
              Usage:
                dpName: cpuUsagemhz_cpuUsagemhz
                format: "%7.2lf%s"
                rpn: "1000000,*"

          Memory Usage:
            units: bytes
            base: true
            miny: 0

            graphpoints:
              Consumed:
                dpName: memConsumed_memConsumed
                format: "%7.2lf%s"
                rpn: "1024,*"

              Balloon:
                dpName: memBalloon_memBalloon
                format: "%7.2lf%s"
                rpn: "1024,*"

              Total Available:
                dpName: memTotal_memTotal
                format: "%7.2lf%s"


      Datacenter:
        description: "VMware vSphere: Datacenter Monitoring"
        targetPythonClass: ZenPacks.zenoss.vSphere.Datacenter


      Datastore:
        description: "VMware vSphere: Datastore Monitoring"
        targetPythonClass: ZenPacks.zenoss.vSphere.Datastore

        datasources:
          # The capacity related counters act strangely, when they work at all. It may be that they
          # only update periodically, so we just go off the modeled values instead (see below)

          # datastoreCapacity:
          #   description: "VMware vSphere: Datastore / Datastore Capacity"
          #   type: VMware vSphere
          #   component: "${here/id}"
          #   eventClass: /vSphere
          #   group_key: disk
          #   counter_key: capacity
          #   instance: "${here/id}"
          #   rollup: LATEST
          #   chunk_size: "${here/zVSpherePerfQueryChunkSize}"
          #   raw20: "${here/zVSpherePerfQueryRaw20}"

          #   datapoints:
          #     datastoreCapacity:
          #       rrdmin: 0
          #       aliases: {datastoreCapacity: ''}

          # datastoreUsed:
          #   description: "VMware vSphere: Datastore / Datastore Space Used"
          #   type: VMware vSphere
          #   component: "${here/id}"
          #   eventClass: /vSphere
          #   group_key: disk
          #   counter_key: used
          #   instance: "${here/id}"
          #   rollup: LATEST
          #   chunk_size: "${here/zVSpherePerfQueryChunkSize}"
          #   raw20: "${here/zVSpherePerfQueryRaw20}"

          #   datapoints:
          #     datastoreUsed:
          #       rrdmin: 0
          #       aliases: {datastoreUsed: ''}

          # datastoreProvisioned:
          #   description: "VMware vSphere: Datastore / Datastore Space Provisioned"
          #   type: VMware vSphere
          #   component: "${here/id}"
          #   eventClass: /vSphere
          #   group_key: disk
          #   counter_key: provisioned
          #   instance: "${here/id}"
          #   rollup: LATEST
          #   chunk_size: "${here/zVSpherePerfQueryChunkSize}"
          #   raw20: "${here/zVSpherePerfQueryRaw20}"

          #   datapoints:
          #     datastoreProvisioned:
          #       rrdmin: 0
          #       aliases: {datastoreProvisioned: ''}

          datastoreCapacity:
            #description: "VMware vSphere: Datastore / Datastore Capacity"
            type: Property
            component: "${here/id}"
            eventClass: /vSphere
            class_name: vSphereDatastore
            property_name: capacity

            datapoints:
              datastoreCapacity:
                rrdmin: 0
                aliases: {datastoreCapacity: ''}

          datastoreUsed:
            #description: "VMware vSphere: Datastore / Datastore Free Space"
            type: Property
            component: "${here/id}"
            eventClass: /vSphere
            class_name: vSphereDatastore
            property_name: usedSpace

            datapoints:
              datastoreUsed:
                rrdmin: 0
                aliases: {datastoreUsed: ''}              

          datastoreUsedPercent:
            #description: "VMware vSphere: Datastore / Datastore Used Percent"
            type: Property
            component: "${here/id}"
            eventClass: /vSphere
            class_name: vSphereDatastore
            property_name: used_pct

            datapoints:
              datastoreUsedPercent:
                rrdmin: 0
                aliases: {datastoreUsedPercent: ''}              

          datastoreUncommittedPercent:
            #description: "VMware vSphere: Datastore / Datastore Uncommitted Percent"
            type: Property
            component: "${here/id}"
            eventClass: /vSphere
            class_name: vSphereDatastore
            property_name: uncommitted_pct

            datapoints:
              datastoreUncommittedPercent:
                rrdmin: 0
                aliases: {datastoreUncommittedPercent: ''}

          datastoreUncommitted:
            #description: "VMware vSphere: Datastore / Datastore Uncommitted Space"
            type: Property
            component: "${here/id}"
            eventClass: /vSphere
            class_name: vSphereDatastore
            property_name: uncommitted

            datapoints:
              datastoreUncommitted:
                rrdmin: 0
                aliases: {datastoreUncommitted: ''}              

          datastoreRead:
            #description: "VMware vSphere: Datastore / Datastore Read Rate (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: datastore
            counter_key: numberReadAveraged
            instance: "${here/id}"
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryVcChunkSize}"
            raw20: "${here/zVSpherePerfQueryVcRaw20}"

            datapoints:
              datastoreRead:
                rrdmin: 0
                aliases: {datastoreRead: ''}              

          datastoreWrite:
            #description: "VMware vSphere: Datastore / Datastore Write Rate (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: datastore
            counter_key: numberWriteAveraged
            instance: "${here/id}"
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryVcChunkSize}"
            raw20: "${here/zVSpherePerfQueryVcRaw20}"

            datapoints:
              datastoreWrite:
                rrdmin: 0
                aliases: {datastoreWrite: ''}              

        graphs:
          Datastore IO Rate:
            units: bytes/sec
            base: true
            miny: 0

            graphpoints:
              Read:
                dpName: datastoreRead_datastoreRead
                format: "%7.2lf%s"
                rpn: "1024,*"

              Write:
                dpName: datastoreWrite_datastoreWrite
                format: "%7.2lf%s"
                rpn: "1024,*"

          Datastore Disk Usage:
            units: bytes
            base: true
            miny: 0

            graphpoints:
              Capacity:
                dpName: datastoreCapacity_datastoreCapacity
                format: "%7.2lf%s"

              Used:
                dpName: datastoreUsed_datastoreUsed
                format: "%7.2lf%s"

              Uncommitted:
                dpName: datastoreUncommitted_datastoreUncommitted
                format: "%7.2lf%s"

      Datastore-ESX:
        description: "VMware vSphere: Datastore Monitoring (ESX Hosts)"
        targetPythonClass: ZenPacks.zenoss.vSphere.Datastore

        # On ESX, the counters used for Datastores are not supported, so we provide
        # an empty monitoring template by default.


      dvPortgroup:
        description: "VMware vSphere: dvPortGroup Monitoring"
        targetPythonClass: ZenPacks.zenoss.vSphere.DistributedVirtualPortgroup


      dvSwitch:
        description: "VMware vSphere: dvSwitch Monitoring"
        targetPythonClass: ZenPacks.zenoss.vSphere.DistributedVirtualSwitch


      Host:
        description: "VMware vSphere: Host Monitoring"
        targetPythonClass: ZenPacks.zenoss.vSphere.HostSystem

        thresholds:
          High Host CPU Usage:
            dsnames: [cpuUsage_cpuUsage]
            eventClass: /Perf/CPU
            maxval: '90'
            enabled: False
          High Load:
            dsnames: [cpuUsagemhz_cpuUsagemhz]
            eventClass: /Perf/CPU
            maxval: here.effectiveCpu * .9
            enabled: False
          High Memory Consumed:
            dsnames: [memConsumed_memConsumed]
            eventClass: /Perf/Memory
            maxval: here.effectiveMemory * .9
            enabled: False
          Packet Loss:
            dsnames: [ping_rtt_losspct]
            eventClass: /Perf/Interface
            severity: err
            maxval: '80'
        datasources:
          ping:
            #description: "VMware vSphere: Host Management IP (Ping)"
            type: PING
            datapoints:
              rtt_avg: GAUGE
              rtt_losspct: GAUGE
              rtt_max: GAUGE
              rtt_min: GAUGE
              rtt_stddev: GAUGE

          cpuReservedcapacity:
            #description: "VMware vSphere: CPU / CPU Reserved Capacity (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: cpu
            counter_key: reservedCapacity
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              cpuReservedcapacity:
                rrdmin: 0
                aliases: {cpuReservedcapacity: ''}              

          cpuUsage:
            #description: "VMware vSphere: CPU / CPU Usage (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: cpu
            counter_key: usage
            rollup: MAXIMUM
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              cpuUsage:
                rrdmin: 0

                aliases:
                  cpu__pct: "100,/"

          cpuUsagemhz:
            #description: "VMware vSphere: CPU / CPU Usage in MHz (Maximum)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: cpu
            rollup: MAXIMUM
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"
            counter_key: usagemhz

            datapoints:
              cpuUsagemhz:
                rrdmin: 0
                aliases: {cpuUsagemhz: ''}              

          diskUsage:
            #description: "VMware vSphere: Disk / Disk Usage (Maximum)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: disk
            counter_key: usage
            rollup: MAXIMUM
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              diskUsage:
                rrdmin: 0
                aliases: {diskUsage: ''}

          memActive:
            #description: "VMware vSphere: Memory / Memory Active (Maximum)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: mem
            counter_key: active
            rollup: MAXIMUM
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              memActive:
                rrdmin: 0

                aliases:
                  memoryAvailable__bytes: "__EVAL:str(here.totalMemory) + 'EXC,1024,*,-'"

          memBalloon:
            #description: "VMware vSphere: Memory / Balloon (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: mem
            counter_key: vmmemctl
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              memBalloon:
                rrdmin: 0
                aliases: {memBalloon: ''}              

          memConsumed:
            #description: "VMware vSphere: Memory / Memory Consumed (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: mem
            counter_key: consumed
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              memConsumed:
                rrdmin: 0
                aliases: {memConsumed: ''}

          memGranted:
            #description: "VMware vSphere: Memory / Memory Granted (Minimum)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: mem
            counter_key: granted
            rollup: MAXIMUM
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              memGranted:
                rrdmin: 0
                aliases: {memGranted: ''}

          memSwapused:
            #description: "VMware vSphere: Memory / Memory Swap Used (Maximum)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: mem
            counter_key: swapused
            rollup: MAXIMUM
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              memSwapused:
                rrdmin: 0
                aliases: {memSwapused: null}              

          memTotal:
            #description: "VMware vSphere: Memory / Total Memory"
            type: Property
            component: "${here/id}"
            eventClass: /vSphere
            class_name: vSphereHostSystem
            property_name: totalMemory

            datapoints:
              memTotal:
                rrdmin: 0

                aliases:
                  memTotal__bytes: ""

          sysUpTime:
            #description: "VMware vSphere: System / Uptime (Latest)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: sys
            counter_key: uptime
            rollup: LATEST
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              sysUpTime:
                rrdmin: 0
                aliases: {sysUpTime: null}              

          vmCount:
            #description: "VMware vSphere: VMs / VM Count"
            type: Property
            component: "${here/id}"
            eventClass: /vSphere
            class_name: vSphereHostSystem
            property_name: vm_count

            datapoints:
              vmCount:
                rrdmin: 0
                aliases: {vmCount: null}              

          vmPoweredCount:
            #description: "VMware vSphere: VMs / VM Count"
            type: Property
            component: "${here/id}"
            eventClass: /vSphere
            class_name: vSphereHostSystem
            property_name: powered_vm_count

            datapoints:
              vmPoweredCount:
                rrdmin: 0
                aliases: {vmPoweredCount: null}              

          vmSuspendedCount:
            #description: "VMware vSphere: VMs / VM Count"
            type: Property
            component: "${here/id}"
            eventClass: /vSphere
            class_name: vSphereHostSystem
            property_name: suspended_vm_count

            datapoints:
              vmSuspendedCount:
                rrdmin: 0
                aliases: {vmSuspendedCount: null}

          vmUnpoweredCount:
            #description: "VMware vSphere: VMs / VM Count"
            type: Property
            component: "${here/id}"
            eventClass: /vSphere
            class_name: vSphereHostSystem
            property_name: unpowered_vm_count

            datapoints:
              vmUnpoweredCount:
                rrdmin: 0
                aliases: {vmUnpoweredCount: null}    

        graphs:
          CPU Utilization:
            units: percentage
            miny: 0
            maxy: 100

            graphpoints:
              Usage:
                dpName: cpuUsage_cpuUsage
                format: "%7.2lf%%"
                rpn: "100,/"

          CPU Usage:
            units: hertz
            miny: 0

            graphpoints:
              Usage:
                dpName: cpuUsagemhz_cpuUsagemhz
                format: "%7.2lf%s"
                rpn: "1000000,*"

              Reserved:
                dpName: cpuReservedcapacity_cpuReservedcapacity
                format: "%7.2lf%s"
                rpn: "1000000,*"

          Memory Usage:
            units: bytes
            base: true
            miny: 0

            graphpoints:
              Consumed:
                dpName: memConsumed_memConsumed
                format: "%7.2lf%s"
                rpn: "1024,*"

              Active:
                dpName: memActive_memActive
                format: "%7.2lf%s"
                rpn: "1024,*"

              Granted:
                dpName: memGranted_memGranted
                format: "%7.2lf%s"
                rpn: "1024,*"

              Balloon:
                dpName: memBalloon_memBalloon
                format: "%7.2lf%s"
                rpn: "1024,*"

              Total:
                dpName: memTotal_memTotal
                format: "%7.2lf%s"

          Swap:
            units: bytes
            base: true
            miny: 0

            graphpoints:
              Used:
                dpName: memSwapused_memSwapused
                format: "%7.2lf%s"
                rpn: "1024,*"

          Disk Usage:
            units: bytes/sec
            base: true
            miny: 0

            graphpoints:
              Usage:
                dpName: diskUsage_diskUsage
                format: "%7.2lf%s"
                rpn: "1024,*"

          Virtual Machines:
            units: count
            miny: 0

            graphpoints:
              Total:
                dpName: vmCount_vmCount
                format: "%7.0lf%s"

              Powered On:
                dpName: vmPoweredCount_vmPoweredCount
                format: "%7.0lf%s"

              Suspended:
                dpName: vmSuspendedCount_vmSuspendedCount
                format: "%7.0lf%s"

              Powered Off:
                dpName: vmUnpoweredCount_vmUnpoweredCount
                format: "%7.0lf%s"

          Ping (RTT):
            height: 100
            width: 500
            units: ms
            miny: 0
            graphpoints:
              Average:
                dpName: ping_rtt_avg
              Maximum:
                dpName: ping_rtt_max
              Minimum:
                dpName: ping_rtt_min

          Ping (Packet Loss):
            height: 100
            width: 500
            units: percentage
            miny: 0
            maxy: 100
            graphpoints:
              Packet Loss:
                dpName: ping_rtt_losspct

      LUN:
        description: "VMware vSphere: LUN Monitoring"
        targetPythonClass: ZenPacks.zenoss.vSphere.LUN

        datasources:
          diskRead:
            #description: "VMware vSphere: Disk / Disk Read Rate (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: disk
            counter_key: read
            instance: "${here/id}"
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              diskRead:
                rrdmin: 0
                aliases: {diskRead: ''}

          diskReadRequests:
            #description: "VMware vSphere: Disk / Disk Read Requests (Summation)"
            type: VMware vSphere
            component:
            eventClass: /vSphere
            group_key: disk
            counter_key: numberRead
            instance: "${here/id}"
            rollup: SUMMATION
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              diskReadRequests:
                rrdmin: 0
                aliases: {diskReadRequests: ''}              

          diskWrite:
            #description: "VMware vSphere: Disk / Disk Write Rate (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: disk
            counter_key: write
            instance: "${here/id}"
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              diskWrite:
                rrdmin: 0
                aliases: {diskWrite: ''}              

          diskWriteRequests:
            #description: "VMware vSphere: Disk / Disk Write Requests (Summation)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: disk
            counter_key: numberWrite
            instance: "${here/id}"
            rollup: SUMMATION
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              diskWriteRequests:
                rrdmin: 0
                aliases: {diskWriteRequests: ''}

        graphs:
          Disk Requests:
            units: requests/sec
            miny: 0

            graphpoints:
              Read:
                dpName: diskReadRequests_diskReadRequests
                format: "%7.2lf%s"

              Write:
                dpName: diskWriteRequests_diskWriteRequests
                format: "%7.2lf%s"

          Disk IO Rate:
            units: bytes/sec
            base: true
            miny: 0

            graphpoints:
              Read:
                dpName: diskRead_diskRead
                format: "%7.2lf%s"
                rpn: "1024,*"

              Write:
                dpName: diskWrite_diskWrite
                format: "%7.2lf%s"
                rpn: "1024,*"


      Network:
        description: "VMware vSphere: Network Monitoring"
        targetPythonClass: ZenPacks.zenoss.vSphere.Network


      pNIC:
        description: "VMware vSphere: pNIC Monitoring"
        targetPythonClass: ZenPacks.zenoss.vSphere.Pnic

        datasources:
          nicRx:
            #description: "VMware vSphere: Network / Network Data Receive Rate (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: net
            counter_key: received
            instance: "${here/instanceId}"
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              nicRx:
                rrdmin: 0

                aliases:
                  nicRx__pct: "${here/linkSpeed},1024,*,/,100,*"

          nicTx:
            #description: "VMware vSphere: Network / Network Data Transmit Rate (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: net
            counter_key: transmitted
            instance: "${here/instanceId}"
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              nicTx:
                rrdmin: 0

                aliases:
                  nicTx__pct: "8192,*,${here/linkSpeed},1000000,*,/,100,*"


        graphs:
          Utilization:
            units: percent
            miny: 0

            graphpoints:
              Receive:
                dpName: nicRx_nicRx
                format: "%7.2lf%%"
                rpn: "8192,*,${here/linkSpeed},1000000,*,/,100,*"

              Transmit:
                dpName: nicTx_nicTx
                format: "%7.2lf%%"
                rpn: "8192,*,${here/linkSpeed},1000000,*,/,100,*"

          Data Rates:
            units: bits/sec
            miny: 0

            graphpoints:
              Receive:
                dpName: nicRx_nicRx
                format: "%7.2lf%s"
                rpn: "8192,*"

              Transmit:
                dpName: nicTx_nicTx
                format: "%7.2lf%s"
                rpn: "8192,*"

      RDM:
        description: "VMware vSphere: RDM Monitoring"
        targetPythonClass: ZenPacks.zenoss.vSphere.RDM

      ResourcePool:
        description: "VMware vSphere: Resource Pool Monitoring"
        targetPythonClass: ZenPacks.zenoss.vSphere.ResourcePool

        thresholds:
          High CPU Usage:
            dsnames: [cpuUsagemhz_cpuUsagemhz]
            eventClass: /Perf/CPU
            maxval: here.cpuLimit * .9
            enabled: False
          High Memory Consumed:
            dsnames: [memConsumed_memConsumed]
            eventClass: /Perf/Memory
            maxval: here.memoryLimit * .9
            enabled: False

        datasources:
          cpuUsagemhz:
            #description: "VMware vSphere: CPU / Usage in MHz (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: cpu
            counter_key: usagemhz
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryVcChunkSize}"
            raw20: "${here/zVSpherePerfQueryVcRaw20}"

            datapoints:
              cpuUsagemhz: GAUGE_MIN_0

          cpuEntitlement:
            # Amount of CPU resources (in MHz) allocated to the virtual machine or
            # resource pool, based on the total cluster capacity and the resource
            # configuration of the resource hierarchy
            #description: "VMware vSphere: CPU / Worst case allocation"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: cpu
            counter_key: cpuentitlement
            rollup: LATEST
            chunk_size: "${here/zVSpherePerfQueryVcChunkSize}"
            raw20: "${here/zVSpherePerfQueryVcRaw20}"

            datapoints:
              cpuEntitlement: GAUGE_MIN_0

          memConsumed:
            #description: "VMware vSphere: Memory / Consumed (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: mem
            counter_key: consumed
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryVcChunkSize}"
            raw20: "${here/zVSpherePerfQueryVcRaw20}"

            datapoints:
              memConsumed:
                rrdmin: 0
                aliases: {memConsumed: ''}              

          memBalloon:
            #description: "VMware vSphere: Memory / Balloon (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: mem
            counter_key: vmmemctl
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryVcChunkSize}"
            raw20: "${here/zVSpherePerfQueryVcRaw20}"

            datapoints:
              memBalloon:
                rrdmin: 0
                aliases: {memBalloon: ''}              

          memOverhead:
            #description: "VMware vSphere: Memory / Overhead (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: mem
            counter_key: overhead
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryVcChunkSize}"
            raw20: "${here/zVSpherePerfQueryVcRaw20}"

            datapoints:
              memOverhead:
                rrdmin: 0
                aliases: {memOverhead: ''}              

          memEntitlement:
            # Memory allocation (in MB) as calculated by the VMkernel scheduler based
            # on current estimated demand and reservation, limit, and shares policies
            # set for all virtual machines and resource pools in the host or cluster
            #description: "VMware vSphere: Memory / Worst case allocation"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: mem
            counter_key: mementitlement
            rollup: LATEST
            chunk_size: "${here/zVSpherePerfQueryVcChunkSize}"
            raw20: "${here/zVSpherePerfQueryVcRaw20}"

            datapoints:
              memEntitlement: GAUGE_MIN_0

        graphs:
          CPU Usage:
            units: hertz
            miny: 0

            graphpoints:
              Usage:
                dpName: cpuUsagemhz_cpuUsagemhz
                format: "%7.2lf%s"
                rpn: "1000000,*"

          CPU Entitlement:
            units: hertz
            miny: 0

            graphpoints:
              Worst Case Allocation:
                dpName: cpuEntitlement_cpuEntitlement
                format: "%7.2lf%s"
                rpn: "1000000,*"

          Memory Usage:
            units: bytes
            base: true
            miny: 0

            graphpoints:
              Consumed:
                dpName: memConsumed_memConsumed
                format: "%7.2lf%s"
                rpn: "1024,*"

              Balloon:
                dpName: memBalloon_memBalloon
                format: "%7.2lf%s"
                rpn: "1024,*"

              Overhead:
                dpName: memOverhead_memOverhead
                format: "%7.2lf%s"
                rpn: "1024,*"

          Memory Entitlement:
            units: bytes
            base: true
            miny: 0

            graphpoints:
              Worst Case Allocation:
                dpName: memEntitlement_memEntitlement
                format: "%7.2lf%s"
                rpn: "1048576,*"

      ResourcePool-ESX:
        description: "VMware vSphere: Resource Pool Monitoring (ESX Hosts)"
        targetPythonClass: ZenPacks.zenoss.vSphere.ResourcePool

        # On ESX, the counters used for ResourcePools are not supported, so we provide
        # an empty monitoring template by default.


      StandaloneResource:
        description: "VMware vSphere: Standalone Resource Monitoring"
        targetPythonClass: ZenPacks.zenoss.vSphere.Standalone


      vApp:
        description: "VMware vSphere: vApp Monitoring"
        targetPythonClass: ZenPacks.zenoss.vSphere.VirtualApp


      VM:
        description: "VMware vSphere: VM Monitoring"
        targetPythonClass: ZenPacks.zenoss.vSphere.VirtualMachine

        thresholds:
          High CPU Usage:
            dsnames: [cpuUsagemhz_cpuUsage]
            eventClass: /Perf/CPU
            maxval: '90'
            enabled: False
          High Memory Consumed:
            dsnames: [memUsage_memUsage]
            eventClass: /Perf/Memory
            maxval: '90'
            enabled: False

        datasources:
          cpuUsageAvg:
            #description: "VMware vSphere: CPU / CPU Usage (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: cpu
            counter_key: usage
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              cpuUsageAvg:
                rrdmin: 0

                aliases:
                  cpuUsageAvg: "100,/"

          cpuUsagemhz:
            #description: "VMware vSphere: CPU / CPU Usage in MHz (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: cpu
            counter_key: usagemhz
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              cpuUsagemhz:
                rrdmin: 0
                aliases: {cpuUsagemhz: ''}

          memUsage:
            #description: "VMware vSphere: Memory / Memory Usage (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: mem
            counter_key: usage
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              memUsage:
                rrdmin: 0

                aliases:
                  memUsage: "100,/"

          memConsumed:
            #description: "VMware vSphere: Memory / Memory Consumed (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: mem
            counter_key: consumed
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              memConsumed:
                rrdmin: 0
                aliases: {memConsumed: ''}

          memOverhead:
            #description: "VMware vSphere: Memory / Memory Overhead (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: mem
            counter_key: overhead
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              memOverhead:
                rrdmin: 0
                aliases: {memOverhead: ''}

          diskUsage:
            #description: "VMware vSphere: Disk / Usage (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: disk
            counter_key: usage
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              diskUsage:
                rrdmin: 0
                aliases: {diskUsage: ''}

          datastoreReadLatency:
            #description: "VMware vSphere: Datastore Read Latency (Max of Per-Datastore Averages)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: datastore
            counter_key: totalReadLatency
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              datastoreReadLatency:
                rrdmin: 0
                aliases: {datastoreReadLatency: ''}

          datastoreWriteLatency:
            #description: "VMware vSphere: Datastore Read Latency (Max of Per-Datastore Averages)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: datastore
            counter_key: totalWriteLatency
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              datastoreWriteLatency:
                rrdmin: 0
                aliases: {datastoreWriteLatency: ''}

          netUsage:
            #description: "VMware vSphere: Network / Usage (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: net
            counter_key: usage
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              netUsage:
                rrdmin: 0
                aliases: {netUsage: ''}

          netReceived:
            #description: "VMware vSphere: Network / Data receive rate (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: net
            counter_key: received
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              netReceived:
                  rrdtype: GAUGE
                  rrdmin: 0
                  aliases:
                      inputOctets__bytes: "1024,*"

          netTransmitted:
            #description: "VMware vSphere: Network / Data transmit rate (Average)"
            type: VMware vSphere
            component: "${here/id}"
            eventClass: /vSphere
            group_key: net
            counter_key: transmitted
            rollup: AVERAGE
            chunk_size: "${here/zVSpherePerfQueryChunkSize}"
            raw20: "${here/zVSpherePerfQueryRaw20}"

            datapoints:
              netTransmitted:
                  rrdtype: GAUGE
                  rrdmin: 0
                  aliases:
                      outputOctets__bytes: "1024,*"

        graphs:
          CPU Utilization:
            units: percentage
            miny: 0
            maxy: 100

            graphpoints:
              Average:
                dpName: cpuUsageAvg_cpuUsageAvg
                format: "%7.2lf%%"
                rpn: "100,/"

          CPU Usage:
            units: hertz
            miny: 0

            graphpoints:
              Average:
                dpName: cpuUsagemhz_cpuUsagemhz
                format: "%7.2lf%s"
                rpn: "1000000,*"

          Memory Utilization:
            units: percentage
            miny: 0
            maxy: 100

            graphpoints:
              Average:
                dpName: memUsage_memUsage
                format: "%7.2lf%%"
                rpn: "100,/"

          Memory Usage:
            units: bytes
            base: true
            miny: 0

            graphpoints:
              Consumed:
                dpName: memConsumed_memConsumed
                format: "%7.2lf%s"
                rpn: "1024,*"

              Overhead:
                dpName: memOverhead_memOverhead
                format: "%7.2lf%s"
                rpn: "1024,*"

          Disk Usage:
            units: bytes/sec
            base: true
            miny: 0

            graphpoints:
              Average:
                dpName: diskUsage_diskUsage
                format: "%7.2lf%s"
                rpn: "1024,*"

          Maximum Datastore Latency:
            units: ms
            base: true
            miny: 0

            graphpoints:
              Read:
                dpName: datastoreReadLatency_datastoreReadLatency
                format: "%7.2lf%s"

              Write:
                dpName: datastoreWriteLatency_datastoreWriteLatency
                format: "%7.2lf%s"

          Network Usage:
            units: bits/sec
            base: true
            miny: 0

            graphpoints:
              Usage:
                dpName: netUsage_netUsage
                format: "%7.2lf%s"
                rpn: "8192,*"

              Receive:
                dpName: netReceived_netReceived
                format: "%7.2lf%s"
                rpn: "8192,*"

              Transmit:
                dpName: netTransmitted_netTransmitted
                format: "%7.2lf%s"
                rpn: "8192,*"


      vNIC:
        description: "VMware vSphere: vNIC Monitoring"
        targetPythonClass: ZenPacks.zenoss.vSphere.Vnic

        # datasources:
        #   nicRx:
        #     description: "VMware vSphere: Network / Network Data Receive Rate (Average)"
        #     type: VMware vSphere
        #     component: "${here/id}"
        #     eventClass: /vSphere
        #     group_key: net
        #     counter_key: received
        #     instance: "${here/instanceId}"
        #     rollup: AVERAGE
        #     chunk_size: "${here/zVSpherePerfQueryChunkSize}"
        #     raw20: "${here/zVSpherePerfQueryRaw20}"

        #     datapoints:
        #       nicRx:
        #         rrdmin: 0

        #   nicTx:
        #     description: "VMware vSphere: Network / Network Data Transmit Rate (Average)"
        #     type: VMware vSphere
        #     component: "${here/id}"
        #     eventClass: /vSphere
        #     group_key: net
        #     counter_key: transmitted
        #     instance: "${here/instanceId}"
        #     rollup: AVERAGE
        #     chunk_size: "${here/zVSpherePerfQueryChunkSize}"
        #     raw20: "${here/zVSpherePerfQueryRaw20}"

        #     datapoints:
        #       nicTx:
        #         rrdmin: 0


        # graphs:
        #   Data Rates:
        #     units: bits/sec
        #     miny: 0

        #     graphpoints:
        #       Receive:
        #         dpName: nicRx_nicRx
        #         format: "%7.2lf%s"
        #         rpn: "8192,*"

        #       Transmit:
        #         dpName: nicTx_nicTx
        #         format: "%7.2lf%s"
        #         rpn: "8192,*"
